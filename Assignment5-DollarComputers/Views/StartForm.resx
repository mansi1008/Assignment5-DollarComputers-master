<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="StartFormImageLabel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>